// üîπ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–µ–∫—Ü–∏–π
const sectionsContainer = document.getElementById("sections");

// üîπ –†–µ–Ω–¥–µ—Ä–∏–º —Å–µ–∫—Ü–∏–∏ –∏–∑ –¥–∞–Ω–Ω—ã—Ö
sectionsData.forEach((section, index) => {
  const sectionEl = document.createElement("section");
  sectionEl.classList.add("content-block");

  // –í—Å—Ç–∞–≤–ª—è–µ–º HTML –≤ —Å–µ–∫—Ü–∏—é
  sectionEl.innerHTML = `
    <h2 class="block-title">${section.title}</h2>
    <div class="block-content">
      <div class="text-content">
        ${section.text.map(p => `<p>${p}</p>`).join("")}
        <ul class="features">
          ${section.features.map(f => `<li>${f}</li>`).join("")}
        </ul>
      </div>
      <div class="gallery">
        <div class="gallery-grid">
          ${section.images.map(img => `
            <a href="${img.src}" data-fancybox="gallery${index}" data-caption="${img.caption}">
              <img src="${img.src}" alt="${img.caption}">
            </a>
          `).join("")}
        </div>
      </div>
    </div>
  `;

  sectionsContainer.appendChild(sectionEl);
});

// üîπ –ü–æ–¥–∫–ª—é—á–∞–µ–º Fancybox
Fancybox.bind("[data-fancybox]", {
  Thumbs: false,
  Toolbar: {
    display: {
      left: ["infobar"],
      middle: ["zoomIn", "zoomOut", "toggle1to1"],
      right: ["slideshow", "thumbs", "close"],
    },
  },
});

// üîπ –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–æ–≤ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
const observer = new IntersectionObserver((entries) => {
  entries.forEach(entry => {
    if (entry.isIntersecting) {
      entry.target.classList.add("visible");
      observer.unobserve(entry.target); // –ß—Ç–æ–±—ã –∞–Ω–∏–º–∞—Ü–∏—è –±—ã–ª–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
    }
  });
}, { threshold: 0.2 });

// –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –≤—Å–µ–º–∏ —Å–µ–∫—Ü–∏—è–º–∏
document.querySelectorAll(".content-block").forEach(block => {
  observer.observe(block);
});