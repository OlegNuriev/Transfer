/* üîπ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–µ–∫—Ü–∏–π
const sectionsContainer = document.getElementById("sections");

document.addEventListener("DOMContentLoaded", function () {
  const sectionsContainer = document.getElementById("sections");
  const headerHeight = document.querySelector(".fixed-header").offsetHeight;

// üîπ –†–µ–Ω–¥–µ—Ä–∏–º —Å–µ–∫—Ü–∏–∏ –∏–∑ –¥–∞–Ω–Ω—ã—Ö
sectionsData.forEach((section, index) => {
  const sectionEl = document.createElement("section");
  sectionEl.classList.add("content-block");

  // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø —É –ø–µ—Ä–≤–æ–≥–æ –±–ª–æ–∫–∞
    if (index === 0) {
      sectionEl.style.marginTop = headerHeight + "px";
    }

  // –í—Å—Ç–∞–≤–ª—è–µ–º HTML –≤ —Å–µ–∫—Ü–∏—é
  sectionEl.innerHTML = `
    <h2 class="block-title">${section.title}</h2>
    <div class="block-content">
      <div class="text-content">
        ${section.text.map(p => `<p>${p}</p>`).join("")}
        <ul class="features">
          ${section.features.map(f => `<li>${f}</li>`).join("")}
        </ul>
      </div>
      <div class="gallery">
        <div class="gallery-grid">
          ${section.images.map(img => `
            <a href="${img.src}" data-fancybox="gallery${index}" data-caption="${img.caption}">
              <img src="${img.src}" alt="${img.caption}" loading="lazy">
            </a>
          `).join("")}
        </div>
      </div>
    </div>
  `;

  sectionsContainer.appendChild(sectionEl);
});

// üîπ –ü–æ–¥–∫–ª—é—á–∞–µ–º Fancybox
Fancybox.bind("[data-fancybox]", {
  Thumbs: false,
  Toolbar: {
    display: {
      left: ["infobar"],
      middle: ["zoomIn", "zoomOut", "toggle1to1"],
      right: ["slideshow", "thumbs", "close"],
    },
  },
  preload: 1, // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ—Ç 1 —Å–æ—Å–µ–¥–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  wheel: "slide", // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –º—ã—à—å—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  transition: "slide", // –ü–ª–∞–≤–Ω–æ–µ slide-–ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ
});

// üîπ –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–æ–≤ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
const observer = new IntersectionObserver((entries) => {
  entries.forEach(entry => {
    if (entry.isIntersecting) {
      entry.target.classList.add("visible");
      observer.unobserve(entry.target); // –ß—Ç–æ–±—ã –∞–Ω–∏–º–∞—Ü–∏—è –±—ã–ª–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
    }
  });
}, { threshold: 0.2 });

// –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –≤—Å–µ–º–∏ —Å–µ–∫—Ü–∏—è–º–∏
document.querySelectorAll(".content-block").forEach(block => {
  observer.observe(block);
});

// üîπ –ö–Ω–æ–ø–∫–∞ "–ù–∞–≤–µ—Ä—Ö" - –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –ö–û–î
// –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ DOM, —á—Ç–æ–±—ã —Å–∫—Ä–∏–ø—Ç —Ç–æ—á–Ω–æ –Ω–∞—à–µ–ª –∫–Ω–æ–ø–∫—É
document.addEventListener('DOMContentLoaded', function() {
    
    // 1. –ü–æ–ª—É—á–∞–µ–º –∫–Ω–æ–ø–∫—É –∏–∑ HTML (–Ω–µ —Å–æ–∑–¥–∞–µ–º —á–µ—Ä–µ–∑ createElement)
    const scrollButton = document.getElementById('scrollToTop');
    
    // 2. –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤—ã—Ö–æ–¥–∏–º
    if (!scrollButton) {
        console.error('–ö–Ω–æ–ø–∫–∞ #scrollToTop –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ HTML!');
        return;
    }
    
    // 3. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
    scrollButton.addEventListener('click', function() {
        window.scrollTo({ top: 0, behavior: 'smooth' });
    });
    
    // 4. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    window.addEventListener('scroll', function() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É pageYOffset –¥–ª—è –∫—Ä–æ—Å—Å–±—Ä–∞—É–∑–µ—Ä–Ω–æ—Å—Ç–∏
        const scrolled = window.pageYOffset || document.documentElement.scrollTop;
        
        if (scrolled > 300) {
            scrollButton.style.display = 'block';
        } else {
            scrollButton.style.display = 'none';
        }
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    scrollButton.style.display = 'none';
    
    console.log('–ö–Ω–æ–ø–∫–∞ "–ù–∞–≤–µ—Ä—Ö" –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!'); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
});*/

document.addEventListener("DOMContentLoaded", function () {
  // üîπ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–µ–∫—Ü–∏–π
  const sectionsContainer = document.getElementById("sections");
  const headerHeight = document.querySelector(".fixed-header").offsetHeight;

  // üîπ –†–µ–Ω–¥–µ—Ä–∏–º —Å–µ–∫—Ü–∏–∏ –∏–∑ –¥–∞–Ω–Ω—ã—Ö
  sectionsData.forEach((section, index) => {
    const sectionEl = document.createElement("section");
    sectionEl.classList.add("content-block");

    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø —É –ø–µ—Ä–≤–æ–≥–æ –±–ª–æ–∫–∞ –ø–æ –≤—ã—Å–æ—Ç–µ —Ö–µ–¥–µ—Ä–∞
    if (index === 0) {
      sectionEl.style.marginTop = headerHeight + "px";
    }

    // –í—Å—Ç–∞–≤–ª—è–µ–º HTML –≤ —Å–µ–∫—Ü–∏—é
    sectionEl.innerHTML = `
      <h2 class="block-title">${section.title}</h2>
      <div class="block-content">
        <div class="text-content">
          ${section.text.map(p => `<p>${p}</p>`).join("")}
          <ul class="features">
            ${section.features.map(f => `<li>${f}</li>`).join("")}
          </ul>
        </div>
        <div class="gallery">
          <div class="gallery-grid">
            ${section.images.map(img => `
              <a href="${img.src}" data-fancybox="gallery${index}" data-caption="${img.caption}">
                <img src="${img.src}" alt="${img.caption}" loading="lazy">
              </a>
            `).join("")}
          </div>
        </div>
      </div>
    `;

    sectionsContainer.appendChild(sectionEl);
  });

  // üîπ –ü–æ–¥–∫–ª—é—á–∞–µ–º Fancybox
  Fancybox.bind("[data-fancybox]", {
    Thumbs: false,
    Toolbar: {
      display: {
        left: ["infobar"],
        middle: ["zoomIn", "zoomOut", "toggle1to1"],
        right: ["slideshow", "thumbs", "close"],
      },
    },
    preload: 1,
    wheel: "slide",
    transition: "slide",
  });

  // üîπ –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–æ–≤ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add("visible");
        observer.unobserve(entry.target);
      }
    });
  }, { threshold: 0.2 });

  document.querySelectorAll(".content-block").forEach(block => {
    observer.observe(block);
  });

  // üîπ –ö–Ω–æ–ø–∫–∞ "–ù–∞–≤–µ—Ä—Ö"
  const scrollButton = document.getElementById('scrollToTop');
  if (scrollButton) {
    scrollButton.addEventListener('click', function () {
      window.scrollTo({ top: 0, behavior: 'smooth' });
    });

    window.addEventListener('scroll', function () {
      const scrolled = window.pageYOffset || document.documentElement.scrollTop;
      scrollButton.style.display = scrolled > 300 ? 'block' : 'none';
    });

    scrollButton.style.display = 'none';
  } else {
    console.error('–ö–Ω–æ–ø–∫–∞ #scrollToTop –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ HTML!');
  }
});